
String str1 = "Hello";
String str2 = "Hello";
String str3 = new String("Hello");
System.out.println(str1.equals(str2)); 
System.out.println(str1 == str3); 
System.out.println(str1.compareTo(str2));  


String str1 = "Hello";
String str2 = str1;
str1 = str1 + " World";
System.out.println(str1); 
System.out.println(str2); 

import java.util.TreeSet;
public class FileIndexer {
public static void main(String[] args) {
TreeSet<String> files = new TreeSet<>();
files.add("/docs/report.docx");
files.add("/images/photo.jpg");
files.add("/docs/report.docx");
System.out.println("Indexed files: " + files);
}
}



public class NotificationSystem {
public static void main(String[] args) {
LinkedHashSet<String> notifications = new LinkedHashSet<>();
notifications.add("New message from John");
notifications.add("New comment on your post");
notifications.add("New message from John");
System.out.println("Notifications: " + notifications);
}
}

String str = " Hello World ";
System.out.println(str.trim()); 
System.out.println(str.toUpperCase()); 
System.out.println(str.charAt(1)); 
System.out.println(str.substring(1, 6)); 


final keyword usage

String a = "Tata";

String b = a;

a = "Birla";

b = ?


Differece between Comparable and Comparator along with compare and compareTo.

How will you test a method that will throw exception and how will you assert its msg using junit 5 (use: assertThrows() method)

Java immutability - write a sample class and ensure fields are not modified from the outside Design an Immutable class, a variation was also asked like if a List was added in the class and we use a getter function to obtain this list, this list can be mutated , how to make sure that even this list is immutable in this class(suggest a method other than Collections.immutableList)

What's concurrentModificationException? Many users are accessing same list (adding, removing and deleting the records). does java provides any out of the box solution for that?

2 ways to create a string? what's the difference ?

Overloading vs Overriding.

Java work as Pass by value or Pass by reference (It was tricky question)

Executor Service

countdownlatch vs cyclicbarrier

Types Of thread pool

Use of Default method in java8

Difference between Abstract class vs Interface

Ways to create thread.

Best Approach to create Thread.

Map vs FlatMap

Parallel Stream internal working

when we choose Stream over parallel Stream

Explain completablefuture.

What is Future Object

HashMap internal working

equal and hashcode method contract

If we override only equal method, will it work.

What is a connection pool in the context of database management, and what are the advantages of using it?

How does implement a connection pool class as a singleton, and why is it important to provide a get connection method?

What is the purpose of the double-checked locking pattern in a multithreaded environment, and how does it prevent race conditions?

Why is it important to perform a null check before acquiring a synchronized block in a double-checked locking pattern?

Deep Cloning

Shallow Cloning

What is the use of try with resources

Use of finally
